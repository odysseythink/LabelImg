// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

#include "api.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_api_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PK_PASCAL_VOC_ANNOTATION_api_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_api_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PK_PASCAL_VOC_ANNOTATION_OBJ_api_2eproto;
namespace pb {
class PK_PASCAL_VOC_ANNOTATION_OBJDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PK_PASCAL_VOC_ANNOTATION_OBJ> _instance;
} _PK_PASCAL_VOC_ANNOTATION_OBJ_default_instance_;
class PK_PASCAL_VOC_ANNOTATIONDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PK_PASCAL_VOC_ANNOTATION> _instance;
} _PK_PASCAL_VOC_ANNOTATION_default_instance_;
class PK_PASCAL_VOC_SAVE_REQDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PK_PASCAL_VOC_SAVE_REQ> _instance;
} _PK_PASCAL_VOC_SAVE_REQ_default_instance_;
class PK_PASCAL_VOC_SAVE_RSPDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PK_PASCAL_VOC_SAVE_RSP> _instance;
} _PK_PASCAL_VOC_SAVE_RSP_default_instance_;
}  // namespace pb
static void InitDefaultsscc_info_PK_PASCAL_VOC_ANNOTATION_api_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_PK_PASCAL_VOC_ANNOTATION_default_instance_;
    new (ptr) ::pb::PK_PASCAL_VOC_ANNOTATION();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::PK_PASCAL_VOC_ANNOTATION::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PK_PASCAL_VOC_ANNOTATION_api_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PK_PASCAL_VOC_ANNOTATION_api_2eproto}, {
      &scc_info_PK_PASCAL_VOC_ANNOTATION_OBJ_api_2eproto.base,}};

static void InitDefaultsscc_info_PK_PASCAL_VOC_ANNOTATION_OBJ_api_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_PK_PASCAL_VOC_ANNOTATION_OBJ_default_instance_;
    new (ptr) ::pb::PK_PASCAL_VOC_ANNOTATION_OBJ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::PK_PASCAL_VOC_ANNOTATION_OBJ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PK_PASCAL_VOC_ANNOTATION_OBJ_api_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PK_PASCAL_VOC_ANNOTATION_OBJ_api_2eproto}, {}};

static void InitDefaultsscc_info_PK_PASCAL_VOC_SAVE_REQ_api_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_PK_PASCAL_VOC_SAVE_REQ_default_instance_;
    new (ptr) ::pb::PK_PASCAL_VOC_SAVE_REQ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::PK_PASCAL_VOC_SAVE_REQ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PK_PASCAL_VOC_SAVE_REQ_api_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PK_PASCAL_VOC_SAVE_REQ_api_2eproto}, {
      &scc_info_PK_PASCAL_VOC_ANNOTATION_api_2eproto.base,}};

static void InitDefaultsscc_info_PK_PASCAL_VOC_SAVE_RSP_api_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_PK_PASCAL_VOC_SAVE_RSP_default_instance_;
    new (ptr) ::pb::PK_PASCAL_VOC_SAVE_RSP();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::PK_PASCAL_VOC_SAVE_RSP::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PK_PASCAL_VOC_SAVE_RSP_api_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PK_PASCAL_VOC_SAVE_RSP_api_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_api_2eproto[4];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_api_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_api_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_api_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION_OBJ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION_OBJ, objname_),
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION_OBJ, objpose_),
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION_OBJ, objtruncated_),
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION_OBJ, objdifficult_),
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION_OBJ, bndboxxmin_),
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION_OBJ, bndboxymin_),
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION_OBJ, bndboxxmax_),
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION_OBJ, bndboxymax_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION, folder_),
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION, filename_),
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION, path_),
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION, sourcedatabase_),
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION, szwidth_),
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION, szheight_),
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION, szdepth_),
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION, segmented_),
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_ANNOTATION, objs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_SAVE_REQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_SAVE_REQ, filename_),
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_SAVE_REQ, annotation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_SAVE_RSP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::PK_PASCAL_VOC_SAVE_RSP, errmsg_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::PK_PASCAL_VOC_ANNOTATION_OBJ)},
  { 13, -1, sizeof(::pb::PK_PASCAL_VOC_ANNOTATION)},
  { 27, -1, sizeof(::pb::PK_PASCAL_VOC_SAVE_REQ)},
  { 34, -1, sizeof(::pb::PK_PASCAL_VOC_SAVE_RSP)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_PK_PASCAL_VOC_ANNOTATION_OBJ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_PK_PASCAL_VOC_ANNOTATION_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_PK_PASCAL_VOC_SAVE_REQ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_PK_PASCAL_VOC_SAVE_RSP_default_instance_),
};

const char descriptor_table_protodef_api_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tapi.proto\022\002pb\"\366\001\n\034PK_PASCAL_VOC_ANNOTA"
  "TION_OBJ\022\017\n\007objName\030\001 \001(\t\022\017\n\007objPose\030\002 \001"
  "(\t\022\024\n\014objTruncated\030\003 \001(\005\022\024\n\014objDifficult"
  "\030\004 \001(\005\022\022\n\nbndboxXmin\030\005 \001(\005\022\022\n\nbndboxYmin"
  "\030\006 \001(\005\022\022\n\nbndboxXmax\030\007 \001(\005\022\022\n\nbndboxYmax"
  "\030\010 \001(\005\"8\n\035CMD_PASCAL_VOC_ANNOTATION_OBJ\022"
  "\013\n\007UNKNOWN\020\000\022\n\n\003CMD\020\201\200\254P\"\217\002\n\030PK_PASCAL_V"
  "OC_ANNOTATION\022\016\n\006folder\030\001 \001(\t\022\020\n\010filenam"
  "e\030\002 \001(\t\022\014\n\004path\030\003 \001(\t\022\026\n\016sourcedatabase\030"
  "\004 \001(\t\022\017\n\007szWidth\030\005 \001(\005\022\020\n\010szHeight\030\006 \001(\005"
  "\022\017\n\007szDepth\030\007 \001(\005\022\021\n\tsegmented\030\010 \001(\005\022.\n\004"
  "objs\030\t \003(\0132 .pb.PK_PASCAL_VOC_ANNOTATION"
  "_OBJ\"4\n\031CMD_PASCAL_VOC_ANNOTATION\022\013\n\007UNK"
  "NOWN\020\000\022\n\n\003CMD\020\201\200\254P\"\220\001\n\026PK_PASCAL_VOC_SAV"
  "E_REQ\022\020\n\010filename\030\001 \001(\t\0220\n\nannotation\030\002 "
  "\001(\0132\034.pb.PK_PASCAL_VOC_ANNOTATION\"2\n\027CMD"
  "_PASCAL_VOC_SAVE_REQ\022\013\n\007UNKNOWN\020\000\022\n\n\003CMD"
  "\020\201\200\254P\"\\\n\026PK_PASCAL_VOC_SAVE_RSP\022\016\n\006errms"
  "g\030\001 \001(\t\"2\n\027CMD_PASCAL_VOC_SAVE_RSP\022\013\n\007UN"
  "KNOWN\020\000\022\n\n\003CMD\020\201\200\250Xb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_api_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_api_2eproto_sccs[4] = {
  &scc_info_PK_PASCAL_VOC_ANNOTATION_api_2eproto.base,
  &scc_info_PK_PASCAL_VOC_ANNOTATION_OBJ_api_2eproto.base,
  &scc_info_PK_PASCAL_VOC_SAVE_REQ_api_2eproto.base,
  &scc_info_PK_PASCAL_VOC_SAVE_RSP_api_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_api_2eproto_once;
static bool descriptor_table_api_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_api_2eproto = {
  &descriptor_table_api_2eproto_initialized, descriptor_table_protodef_api_2eproto, "api.proto", 787,
  &descriptor_table_api_2eproto_once, descriptor_table_api_2eproto_sccs, descriptor_table_api_2eproto_deps, 4, 0,
  schemas, file_default_instances, TableStruct_api_2eproto::offsets,
  file_level_metadata_api_2eproto, 4, file_level_enum_descriptors_api_2eproto, file_level_service_descriptors_api_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_api_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_api_2eproto), true);
namespace pb {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PK_PASCAL_VOC_ANNOTATION_OBJ_CMD_PASCAL_VOC_ANNOTATION_OBJ_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_api_2eproto);
  return file_level_enum_descriptors_api_2eproto[0];
}
bool PK_PASCAL_VOC_ANNOTATION_OBJ_CMD_PASCAL_VOC_ANNOTATION_OBJ_IsValid(int value) {
  switch (value) {
    case 0:
    case 168493057:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PK_PASCAL_VOC_ANNOTATION_OBJ_CMD_PASCAL_VOC_ANNOTATION_OBJ PK_PASCAL_VOC_ANNOTATION_OBJ::UNKNOWN;
constexpr PK_PASCAL_VOC_ANNOTATION_OBJ_CMD_PASCAL_VOC_ANNOTATION_OBJ PK_PASCAL_VOC_ANNOTATION_OBJ::CMD;
constexpr PK_PASCAL_VOC_ANNOTATION_OBJ_CMD_PASCAL_VOC_ANNOTATION_OBJ PK_PASCAL_VOC_ANNOTATION_OBJ::CMD_PASCAL_VOC_ANNOTATION_OBJ_MIN;
constexpr PK_PASCAL_VOC_ANNOTATION_OBJ_CMD_PASCAL_VOC_ANNOTATION_OBJ PK_PASCAL_VOC_ANNOTATION_OBJ::CMD_PASCAL_VOC_ANNOTATION_OBJ_MAX;
constexpr int PK_PASCAL_VOC_ANNOTATION_OBJ::CMD_PASCAL_VOC_ANNOTATION_OBJ_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PK_PASCAL_VOC_ANNOTATION_CMD_PASCAL_VOC_ANNOTATION_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_api_2eproto);
  return file_level_enum_descriptors_api_2eproto[1];
}
bool PK_PASCAL_VOC_ANNOTATION_CMD_PASCAL_VOC_ANNOTATION_IsValid(int value) {
  switch (value) {
    case 0:
    case 168493057:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PK_PASCAL_VOC_ANNOTATION_CMD_PASCAL_VOC_ANNOTATION PK_PASCAL_VOC_ANNOTATION::UNKNOWN;
constexpr PK_PASCAL_VOC_ANNOTATION_CMD_PASCAL_VOC_ANNOTATION PK_PASCAL_VOC_ANNOTATION::CMD;
constexpr PK_PASCAL_VOC_ANNOTATION_CMD_PASCAL_VOC_ANNOTATION PK_PASCAL_VOC_ANNOTATION::CMD_PASCAL_VOC_ANNOTATION_MIN;
constexpr PK_PASCAL_VOC_ANNOTATION_CMD_PASCAL_VOC_ANNOTATION PK_PASCAL_VOC_ANNOTATION::CMD_PASCAL_VOC_ANNOTATION_MAX;
constexpr int PK_PASCAL_VOC_ANNOTATION::CMD_PASCAL_VOC_ANNOTATION_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PK_PASCAL_VOC_SAVE_REQ_CMD_PASCAL_VOC_SAVE_REQ_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_api_2eproto);
  return file_level_enum_descriptors_api_2eproto[2];
}
bool PK_PASCAL_VOC_SAVE_REQ_CMD_PASCAL_VOC_SAVE_REQ_IsValid(int value) {
  switch (value) {
    case 0:
    case 168493057:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PK_PASCAL_VOC_SAVE_REQ_CMD_PASCAL_VOC_SAVE_REQ PK_PASCAL_VOC_SAVE_REQ::UNKNOWN;
constexpr PK_PASCAL_VOC_SAVE_REQ_CMD_PASCAL_VOC_SAVE_REQ PK_PASCAL_VOC_SAVE_REQ::CMD;
constexpr PK_PASCAL_VOC_SAVE_REQ_CMD_PASCAL_VOC_SAVE_REQ PK_PASCAL_VOC_SAVE_REQ::CMD_PASCAL_VOC_SAVE_REQ_MIN;
constexpr PK_PASCAL_VOC_SAVE_REQ_CMD_PASCAL_VOC_SAVE_REQ PK_PASCAL_VOC_SAVE_REQ::CMD_PASCAL_VOC_SAVE_REQ_MAX;
constexpr int PK_PASCAL_VOC_SAVE_REQ::CMD_PASCAL_VOC_SAVE_REQ_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PK_PASCAL_VOC_SAVE_RSP_CMD_PASCAL_VOC_SAVE_RSP_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_api_2eproto);
  return file_level_enum_descriptors_api_2eproto[3];
}
bool PK_PASCAL_VOC_SAVE_RSP_CMD_PASCAL_VOC_SAVE_RSP_IsValid(int value) {
  switch (value) {
    case 0:
    case 185204737:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PK_PASCAL_VOC_SAVE_RSP_CMD_PASCAL_VOC_SAVE_RSP PK_PASCAL_VOC_SAVE_RSP::UNKNOWN;
constexpr PK_PASCAL_VOC_SAVE_RSP_CMD_PASCAL_VOC_SAVE_RSP PK_PASCAL_VOC_SAVE_RSP::CMD;
constexpr PK_PASCAL_VOC_SAVE_RSP_CMD_PASCAL_VOC_SAVE_RSP PK_PASCAL_VOC_SAVE_RSP::CMD_PASCAL_VOC_SAVE_RSP_MIN;
constexpr PK_PASCAL_VOC_SAVE_RSP_CMD_PASCAL_VOC_SAVE_RSP PK_PASCAL_VOC_SAVE_RSP::CMD_PASCAL_VOC_SAVE_RSP_MAX;
constexpr int PK_PASCAL_VOC_SAVE_RSP::CMD_PASCAL_VOC_SAVE_RSP_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void PK_PASCAL_VOC_ANNOTATION_OBJ::InitAsDefaultInstance() {
}
class PK_PASCAL_VOC_ANNOTATION_OBJ::_Internal {
 public:
};

PK_PASCAL_VOC_ANNOTATION_OBJ::PK_PASCAL_VOC_ANNOTATION_OBJ()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.PK_PASCAL_VOC_ANNOTATION_OBJ)
}
PK_PASCAL_VOC_ANNOTATION_OBJ::PK_PASCAL_VOC_ANNOTATION_OBJ(const PK_PASCAL_VOC_ANNOTATION_OBJ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_objname().empty()) {
    objname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.objname_);
  }
  objpose_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_objpose().empty()) {
    objpose_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.objpose_);
  }
  ::memcpy(&objtruncated_, &from.objtruncated_,
    static_cast<size_t>(reinterpret_cast<char*>(&bndboxymax_) -
    reinterpret_cast<char*>(&objtruncated_)) + sizeof(bndboxymax_));
  // @@protoc_insertion_point(copy_constructor:pb.PK_PASCAL_VOC_ANNOTATION_OBJ)
}

void PK_PASCAL_VOC_ANNOTATION_OBJ::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PK_PASCAL_VOC_ANNOTATION_OBJ_api_2eproto.base);
  objname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  objpose_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&objtruncated_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bndboxymax_) -
      reinterpret_cast<char*>(&objtruncated_)) + sizeof(bndboxymax_));
}

PK_PASCAL_VOC_ANNOTATION_OBJ::~PK_PASCAL_VOC_ANNOTATION_OBJ() {
  // @@protoc_insertion_point(destructor:pb.PK_PASCAL_VOC_ANNOTATION_OBJ)
  SharedDtor();
}

void PK_PASCAL_VOC_ANNOTATION_OBJ::SharedDtor() {
  objname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  objpose_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PK_PASCAL_VOC_ANNOTATION_OBJ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PK_PASCAL_VOC_ANNOTATION_OBJ& PK_PASCAL_VOC_ANNOTATION_OBJ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PK_PASCAL_VOC_ANNOTATION_OBJ_api_2eproto.base);
  return *internal_default_instance();
}


void PK_PASCAL_VOC_ANNOTATION_OBJ::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.PK_PASCAL_VOC_ANNOTATION_OBJ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  objpose_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&objtruncated_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bndboxymax_) -
      reinterpret_cast<char*>(&objtruncated_)) + sizeof(bndboxymax_));
  _internal_metadata_.Clear();
}

const char* PK_PASCAL_VOC_ANNOTATION_OBJ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string objName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_objname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.PK_PASCAL_VOC_ANNOTATION_OBJ.objName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string objPose = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_objpose();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.PK_PASCAL_VOC_ANNOTATION_OBJ.objPose"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 objTruncated = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          objtruncated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 objDifficult = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          objdifficult_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 bndboxXmin = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          bndboxxmin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 bndboxYmin = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          bndboxymin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 bndboxXmax = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          bndboxxmax_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 bndboxYmax = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          bndboxymax_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PK_PASCAL_VOC_ANNOTATION_OBJ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.PK_PASCAL_VOC_ANNOTATION_OBJ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string objName = 1;
  if (this->objname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_objname().data(), static_cast<int>(this->_internal_objname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.PK_PASCAL_VOC_ANNOTATION_OBJ.objName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_objname(), target);
  }

  // string objPose = 2;
  if (this->objpose().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_objpose().data(), static_cast<int>(this->_internal_objpose().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.PK_PASCAL_VOC_ANNOTATION_OBJ.objPose");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_objpose(), target);
  }

  // int32 objTruncated = 3;
  if (this->objtruncated() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_objtruncated(), target);
  }

  // int32 objDifficult = 4;
  if (this->objdifficult() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_objdifficult(), target);
  }

  // int32 bndboxXmin = 5;
  if (this->bndboxxmin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_bndboxxmin(), target);
  }

  // int32 bndboxYmin = 6;
  if (this->bndboxymin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_bndboxymin(), target);
  }

  // int32 bndboxXmax = 7;
  if (this->bndboxxmax() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_bndboxxmax(), target);
  }

  // int32 bndboxYmax = 8;
  if (this->bndboxymax() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_bndboxymax(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.PK_PASCAL_VOC_ANNOTATION_OBJ)
  return target;
}

size_t PK_PASCAL_VOC_ANNOTATION_OBJ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.PK_PASCAL_VOC_ANNOTATION_OBJ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string objName = 1;
  if (this->objname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_objname());
  }

  // string objPose = 2;
  if (this->objpose().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_objpose());
  }

  // int32 objTruncated = 3;
  if (this->objtruncated() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_objtruncated());
  }

  // int32 objDifficult = 4;
  if (this->objdifficult() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_objdifficult());
  }

  // int32 bndboxXmin = 5;
  if (this->bndboxxmin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_bndboxxmin());
  }

  // int32 bndboxYmin = 6;
  if (this->bndboxymin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_bndboxymin());
  }

  // int32 bndboxXmax = 7;
  if (this->bndboxxmax() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_bndboxxmax());
  }

  // int32 bndboxYmax = 8;
  if (this->bndboxymax() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_bndboxymax());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PK_PASCAL_VOC_ANNOTATION_OBJ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.PK_PASCAL_VOC_ANNOTATION_OBJ)
  GOOGLE_DCHECK_NE(&from, this);
  const PK_PASCAL_VOC_ANNOTATION_OBJ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PK_PASCAL_VOC_ANNOTATION_OBJ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.PK_PASCAL_VOC_ANNOTATION_OBJ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.PK_PASCAL_VOC_ANNOTATION_OBJ)
    MergeFrom(*source);
  }
}

void PK_PASCAL_VOC_ANNOTATION_OBJ::MergeFrom(const PK_PASCAL_VOC_ANNOTATION_OBJ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.PK_PASCAL_VOC_ANNOTATION_OBJ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objname().size() > 0) {

    objname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.objname_);
  }
  if (from.objpose().size() > 0) {

    objpose_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.objpose_);
  }
  if (from.objtruncated() != 0) {
    _internal_set_objtruncated(from._internal_objtruncated());
  }
  if (from.objdifficult() != 0) {
    _internal_set_objdifficult(from._internal_objdifficult());
  }
  if (from.bndboxxmin() != 0) {
    _internal_set_bndboxxmin(from._internal_bndboxxmin());
  }
  if (from.bndboxymin() != 0) {
    _internal_set_bndboxymin(from._internal_bndboxymin());
  }
  if (from.bndboxxmax() != 0) {
    _internal_set_bndboxxmax(from._internal_bndboxxmax());
  }
  if (from.bndboxymax() != 0) {
    _internal_set_bndboxymax(from._internal_bndboxymax());
  }
}

void PK_PASCAL_VOC_ANNOTATION_OBJ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.PK_PASCAL_VOC_ANNOTATION_OBJ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PK_PASCAL_VOC_ANNOTATION_OBJ::CopyFrom(const PK_PASCAL_VOC_ANNOTATION_OBJ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.PK_PASCAL_VOC_ANNOTATION_OBJ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PK_PASCAL_VOC_ANNOTATION_OBJ::IsInitialized() const {
  return true;
}

void PK_PASCAL_VOC_ANNOTATION_OBJ::InternalSwap(PK_PASCAL_VOC_ANNOTATION_OBJ* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  objname_.Swap(&other->objname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  objpose_.Swap(&other->objpose_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(objtruncated_, other->objtruncated_);
  swap(objdifficult_, other->objdifficult_);
  swap(bndboxxmin_, other->bndboxxmin_);
  swap(bndboxymin_, other->bndboxymin_);
  swap(bndboxxmax_, other->bndboxxmax_);
  swap(bndboxymax_, other->bndboxymax_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PK_PASCAL_VOC_ANNOTATION_OBJ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PK_PASCAL_VOC_ANNOTATION::InitAsDefaultInstance() {
}
class PK_PASCAL_VOC_ANNOTATION::_Internal {
 public:
};

PK_PASCAL_VOC_ANNOTATION::PK_PASCAL_VOC_ANNOTATION()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.PK_PASCAL_VOC_ANNOTATION)
}
PK_PASCAL_VOC_ANNOTATION::PK_PASCAL_VOC_ANNOTATION(const PK_PASCAL_VOC_ANNOTATION& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      objs_(from.objs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  folder_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_folder().empty()) {
    folder_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.folder_);
  }
  filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filename().empty()) {
    filename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  sourcedatabase_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sourcedatabase().empty()) {
    sourcedatabase_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sourcedatabase_);
  }
  ::memcpy(&szwidth_, &from.szwidth_,
    static_cast<size_t>(reinterpret_cast<char*>(&segmented_) -
    reinterpret_cast<char*>(&szwidth_)) + sizeof(segmented_));
  // @@protoc_insertion_point(copy_constructor:pb.PK_PASCAL_VOC_ANNOTATION)
}

void PK_PASCAL_VOC_ANNOTATION::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PK_PASCAL_VOC_ANNOTATION_api_2eproto.base);
  folder_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sourcedatabase_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&szwidth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&segmented_) -
      reinterpret_cast<char*>(&szwidth_)) + sizeof(segmented_));
}

PK_PASCAL_VOC_ANNOTATION::~PK_PASCAL_VOC_ANNOTATION() {
  // @@protoc_insertion_point(destructor:pb.PK_PASCAL_VOC_ANNOTATION)
  SharedDtor();
}

void PK_PASCAL_VOC_ANNOTATION::SharedDtor() {
  folder_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sourcedatabase_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PK_PASCAL_VOC_ANNOTATION::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PK_PASCAL_VOC_ANNOTATION& PK_PASCAL_VOC_ANNOTATION::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PK_PASCAL_VOC_ANNOTATION_api_2eproto.base);
  return *internal_default_instance();
}


void PK_PASCAL_VOC_ANNOTATION::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.PK_PASCAL_VOC_ANNOTATION)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objs_.Clear();
  folder_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filename_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sourcedatabase_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&szwidth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&segmented_) -
      reinterpret_cast<char*>(&szwidth_)) + sizeof(segmented_));
  _internal_metadata_.Clear();
}

const char* PK_PASCAL_VOC_ANNOTATION::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string folder = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_folder();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.PK_PASCAL_VOC_ANNOTATION.folder"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string filename = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_filename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.PK_PASCAL_VOC_ANNOTATION.filename"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string path = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.PK_PASCAL_VOC_ANNOTATION.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sourcedatabase = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_sourcedatabase();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.PK_PASCAL_VOC_ANNOTATION.sourcedatabase"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 szWidth = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          szwidth_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 szHeight = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          szheight_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 szDepth = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          szdepth_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 segmented = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          segmented_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .pb.PK_PASCAL_VOC_ANNOTATION_OBJ objs = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_objs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PK_PASCAL_VOC_ANNOTATION::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.PK_PASCAL_VOC_ANNOTATION)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string folder = 1;
  if (this->folder().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_folder().data(), static_cast<int>(this->_internal_folder().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.PK_PASCAL_VOC_ANNOTATION.folder");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_folder(), target);
  }

  // string filename = 2;
  if (this->filename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filename().data(), static_cast<int>(this->_internal_filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.PK_PASCAL_VOC_ANNOTATION.filename");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_filename(), target);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.PK_PASCAL_VOC_ANNOTATION.path");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_path(), target);
  }

  // string sourcedatabase = 4;
  if (this->sourcedatabase().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sourcedatabase().data(), static_cast<int>(this->_internal_sourcedatabase().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.PK_PASCAL_VOC_ANNOTATION.sourcedatabase");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_sourcedatabase(), target);
  }

  // int32 szWidth = 5;
  if (this->szwidth() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_szwidth(), target);
  }

  // int32 szHeight = 6;
  if (this->szheight() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_szheight(), target);
  }

  // int32 szDepth = 7;
  if (this->szdepth() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_szdepth(), target);
  }

  // int32 segmented = 8;
  if (this->segmented() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_segmented(), target);
  }

  // repeated .pb.PK_PASCAL_VOC_ANNOTATION_OBJ objs = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_objs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, this->_internal_objs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.PK_PASCAL_VOC_ANNOTATION)
  return target;
}

size_t PK_PASCAL_VOC_ANNOTATION::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.PK_PASCAL_VOC_ANNOTATION)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.PK_PASCAL_VOC_ANNOTATION_OBJ objs = 9;
  total_size += 1UL * this->_internal_objs_size();
  for (const auto& msg : this->objs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string folder = 1;
  if (this->folder().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_folder());
  }

  // string filename = 2;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filename());
  }

  // string path = 3;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string sourcedatabase = 4;
  if (this->sourcedatabase().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sourcedatabase());
  }

  // int32 szWidth = 5;
  if (this->szwidth() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_szwidth());
  }

  // int32 szHeight = 6;
  if (this->szheight() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_szheight());
  }

  // int32 szDepth = 7;
  if (this->szdepth() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_szdepth());
  }

  // int32 segmented = 8;
  if (this->segmented() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_segmented());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PK_PASCAL_VOC_ANNOTATION::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.PK_PASCAL_VOC_ANNOTATION)
  GOOGLE_DCHECK_NE(&from, this);
  const PK_PASCAL_VOC_ANNOTATION* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PK_PASCAL_VOC_ANNOTATION>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.PK_PASCAL_VOC_ANNOTATION)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.PK_PASCAL_VOC_ANNOTATION)
    MergeFrom(*source);
  }
}

void PK_PASCAL_VOC_ANNOTATION::MergeFrom(const PK_PASCAL_VOC_ANNOTATION& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.PK_PASCAL_VOC_ANNOTATION)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objs_.MergeFrom(from.objs_);
  if (from.folder().size() > 0) {

    folder_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.folder_);
  }
  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.sourcedatabase().size() > 0) {

    sourcedatabase_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sourcedatabase_);
  }
  if (from.szwidth() != 0) {
    _internal_set_szwidth(from._internal_szwidth());
  }
  if (from.szheight() != 0) {
    _internal_set_szheight(from._internal_szheight());
  }
  if (from.szdepth() != 0) {
    _internal_set_szdepth(from._internal_szdepth());
  }
  if (from.segmented() != 0) {
    _internal_set_segmented(from._internal_segmented());
  }
}

void PK_PASCAL_VOC_ANNOTATION::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.PK_PASCAL_VOC_ANNOTATION)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PK_PASCAL_VOC_ANNOTATION::CopyFrom(const PK_PASCAL_VOC_ANNOTATION& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.PK_PASCAL_VOC_ANNOTATION)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PK_PASCAL_VOC_ANNOTATION::IsInitialized() const {
  return true;
}

void PK_PASCAL_VOC_ANNOTATION::InternalSwap(PK_PASCAL_VOC_ANNOTATION* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  objs_.InternalSwap(&other->objs_);
  folder_.Swap(&other->folder_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filename_.Swap(&other->filename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sourcedatabase_.Swap(&other->sourcedatabase_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(szwidth_, other->szwidth_);
  swap(szheight_, other->szheight_);
  swap(szdepth_, other->szdepth_);
  swap(segmented_, other->segmented_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PK_PASCAL_VOC_ANNOTATION::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PK_PASCAL_VOC_SAVE_REQ::InitAsDefaultInstance() {
  ::pb::_PK_PASCAL_VOC_SAVE_REQ_default_instance_._instance.get_mutable()->annotation_ = const_cast< ::pb::PK_PASCAL_VOC_ANNOTATION*>(
      ::pb::PK_PASCAL_VOC_ANNOTATION::internal_default_instance());
}
class PK_PASCAL_VOC_SAVE_REQ::_Internal {
 public:
  static const ::pb::PK_PASCAL_VOC_ANNOTATION& annotation(const PK_PASCAL_VOC_SAVE_REQ* msg);
};

const ::pb::PK_PASCAL_VOC_ANNOTATION&
PK_PASCAL_VOC_SAVE_REQ::_Internal::annotation(const PK_PASCAL_VOC_SAVE_REQ* msg) {
  return *msg->annotation_;
}
PK_PASCAL_VOC_SAVE_REQ::PK_PASCAL_VOC_SAVE_REQ()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.PK_PASCAL_VOC_SAVE_REQ)
}
PK_PASCAL_VOC_SAVE_REQ::PK_PASCAL_VOC_SAVE_REQ(const PK_PASCAL_VOC_SAVE_REQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filename().empty()) {
    filename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from._internal_has_annotation()) {
    annotation_ = new ::pb::PK_PASCAL_VOC_ANNOTATION(*from.annotation_);
  } else {
    annotation_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pb.PK_PASCAL_VOC_SAVE_REQ)
}

void PK_PASCAL_VOC_SAVE_REQ::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PK_PASCAL_VOC_SAVE_REQ_api_2eproto.base);
  filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  annotation_ = nullptr;
}

PK_PASCAL_VOC_SAVE_REQ::~PK_PASCAL_VOC_SAVE_REQ() {
  // @@protoc_insertion_point(destructor:pb.PK_PASCAL_VOC_SAVE_REQ)
  SharedDtor();
}

void PK_PASCAL_VOC_SAVE_REQ::SharedDtor() {
  filename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete annotation_;
}

void PK_PASCAL_VOC_SAVE_REQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PK_PASCAL_VOC_SAVE_REQ& PK_PASCAL_VOC_SAVE_REQ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PK_PASCAL_VOC_SAVE_REQ_api_2eproto.base);
  return *internal_default_instance();
}


void PK_PASCAL_VOC_SAVE_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.PK_PASCAL_VOC_SAVE_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filename_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && annotation_ != nullptr) {
    delete annotation_;
  }
  annotation_ = nullptr;
  _internal_metadata_.Clear();
}

const char* PK_PASCAL_VOC_SAVE_REQ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string filename = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_filename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.PK_PASCAL_VOC_SAVE_REQ.filename"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.PK_PASCAL_VOC_ANNOTATION annotation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_annotation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PK_PASCAL_VOC_SAVE_REQ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.PK_PASCAL_VOC_SAVE_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filename = 1;
  if (this->filename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filename().data(), static_cast<int>(this->_internal_filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.PK_PASCAL_VOC_SAVE_REQ.filename");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_filename(), target);
  }

  // .pb.PK_PASCAL_VOC_ANNOTATION annotation = 2;
  if (this->has_annotation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::annotation(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.PK_PASCAL_VOC_SAVE_REQ)
  return target;
}

size_t PK_PASCAL_VOC_SAVE_REQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.PK_PASCAL_VOC_SAVE_REQ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string filename = 1;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filename());
  }

  // .pb.PK_PASCAL_VOC_ANNOTATION annotation = 2;
  if (this->has_annotation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *annotation_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PK_PASCAL_VOC_SAVE_REQ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.PK_PASCAL_VOC_SAVE_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  const PK_PASCAL_VOC_SAVE_REQ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PK_PASCAL_VOC_SAVE_REQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.PK_PASCAL_VOC_SAVE_REQ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.PK_PASCAL_VOC_SAVE_REQ)
    MergeFrom(*source);
  }
}

void PK_PASCAL_VOC_SAVE_REQ::MergeFrom(const PK_PASCAL_VOC_SAVE_REQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.PK_PASCAL_VOC_SAVE_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.has_annotation()) {
    _internal_mutable_annotation()->::pb::PK_PASCAL_VOC_ANNOTATION::MergeFrom(from._internal_annotation());
  }
}

void PK_PASCAL_VOC_SAVE_REQ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.PK_PASCAL_VOC_SAVE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PK_PASCAL_VOC_SAVE_REQ::CopyFrom(const PK_PASCAL_VOC_SAVE_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.PK_PASCAL_VOC_SAVE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PK_PASCAL_VOC_SAVE_REQ::IsInitialized() const {
  return true;
}

void PK_PASCAL_VOC_SAVE_REQ::InternalSwap(PK_PASCAL_VOC_SAVE_REQ* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  filename_.Swap(&other->filename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(annotation_, other->annotation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PK_PASCAL_VOC_SAVE_REQ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PK_PASCAL_VOC_SAVE_RSP::InitAsDefaultInstance() {
}
class PK_PASCAL_VOC_SAVE_RSP::_Internal {
 public:
};

PK_PASCAL_VOC_SAVE_RSP::PK_PASCAL_VOC_SAVE_RSP()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.PK_PASCAL_VOC_SAVE_RSP)
}
PK_PASCAL_VOC_SAVE_RSP::PK_PASCAL_VOC_SAVE_RSP(const PK_PASCAL_VOC_SAVE_RSP& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_errmsg().empty()) {
    errmsg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.PK_PASCAL_VOC_SAVE_RSP)
}

void PK_PASCAL_VOC_SAVE_RSP::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PK_PASCAL_VOC_SAVE_RSP_api_2eproto.base);
  errmsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PK_PASCAL_VOC_SAVE_RSP::~PK_PASCAL_VOC_SAVE_RSP() {
  // @@protoc_insertion_point(destructor:pb.PK_PASCAL_VOC_SAVE_RSP)
  SharedDtor();
}

void PK_PASCAL_VOC_SAVE_RSP::SharedDtor() {
  errmsg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PK_PASCAL_VOC_SAVE_RSP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PK_PASCAL_VOC_SAVE_RSP& PK_PASCAL_VOC_SAVE_RSP::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PK_PASCAL_VOC_SAVE_RSP_api_2eproto.base);
  return *internal_default_instance();
}


void PK_PASCAL_VOC_SAVE_RSP::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.PK_PASCAL_VOC_SAVE_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* PK_PASCAL_VOC_SAVE_RSP::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string errmsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_errmsg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.PK_PASCAL_VOC_SAVE_RSP.errmsg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PK_PASCAL_VOC_SAVE_RSP::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.PK_PASCAL_VOC_SAVE_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string errmsg = 1;
  if (this->errmsg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_errmsg().data(), static_cast<int>(this->_internal_errmsg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.PK_PASCAL_VOC_SAVE_RSP.errmsg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_errmsg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.PK_PASCAL_VOC_SAVE_RSP)
  return target;
}

size_t PK_PASCAL_VOC_SAVE_RSP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.PK_PASCAL_VOC_SAVE_RSP)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errmsg = 1;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_errmsg());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PK_PASCAL_VOC_SAVE_RSP::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.PK_PASCAL_VOC_SAVE_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  const PK_PASCAL_VOC_SAVE_RSP* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PK_PASCAL_VOC_SAVE_RSP>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.PK_PASCAL_VOC_SAVE_RSP)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.PK_PASCAL_VOC_SAVE_RSP)
    MergeFrom(*source);
  }
}

void PK_PASCAL_VOC_SAVE_RSP::MergeFrom(const PK_PASCAL_VOC_SAVE_RSP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.PK_PASCAL_VOC_SAVE_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
}

void PK_PASCAL_VOC_SAVE_RSP::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.PK_PASCAL_VOC_SAVE_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PK_PASCAL_VOC_SAVE_RSP::CopyFrom(const PK_PASCAL_VOC_SAVE_RSP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.PK_PASCAL_VOC_SAVE_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PK_PASCAL_VOC_SAVE_RSP::IsInitialized() const {
  return true;
}

void PK_PASCAL_VOC_SAVE_RSP::InternalSwap(PK_PASCAL_VOC_SAVE_RSP* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  errmsg_.Swap(&other->errmsg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata PK_PASCAL_VOC_SAVE_RSP::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::PK_PASCAL_VOC_ANNOTATION_OBJ* Arena::CreateMaybeMessage< ::pb::PK_PASCAL_VOC_ANNOTATION_OBJ >(Arena* arena) {
  return Arena::CreateInternal< ::pb::PK_PASCAL_VOC_ANNOTATION_OBJ >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::PK_PASCAL_VOC_ANNOTATION* Arena::CreateMaybeMessage< ::pb::PK_PASCAL_VOC_ANNOTATION >(Arena* arena) {
  return Arena::CreateInternal< ::pb::PK_PASCAL_VOC_ANNOTATION >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::PK_PASCAL_VOC_SAVE_REQ* Arena::CreateMaybeMessage< ::pb::PK_PASCAL_VOC_SAVE_REQ >(Arena* arena) {
  return Arena::CreateInternal< ::pb::PK_PASCAL_VOC_SAVE_REQ >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::PK_PASCAL_VOC_SAVE_RSP* Arena::CreateMaybeMessage< ::pb::PK_PASCAL_VOC_SAVE_RSP >(Arena* arena) {
  return Arena::CreateInternal< ::pb::PK_PASCAL_VOC_SAVE_RSP >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
